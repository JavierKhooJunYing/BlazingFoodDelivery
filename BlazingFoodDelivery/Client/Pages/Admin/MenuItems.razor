@page "/admin/menuitems"
@inject IMenuItemService MenuItemService
@inject NavigationManager NavigationManager
@attribute [Authorize(Roles = "Admin")]

<h3>Menu Items</h3>

@if (MenuItemService.AdminMenuItems == null)
{
    <span>Loading Menu Items...</span>
}
else
{
    @*<button class="btn btn-primary float-right" @onclick="CreateMenuItem">
        <i class="oi oi-plus"></i>
        Add New Menu Item
    </button>*@
    <table class="table">
        <thead>
            <tr>
                <th></th>
                <th>Menu Item</th>
                <th>Price</th>
                <th>Visible</th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            <Virtualize Items="MenuItemService.AdminMenuItems" Context="menuitem">
                <tr>
                    <td><img src="@menuitem.ImageUrl" /></td>
                    <td>@menuitem.Title</td>
                    <td>@menuitem.Price</td>
                    <td>@(menuitem.Visible ? "✔️" : "")</td>
                    @*<td>
                        <button class="btn btn-primary" @onclick="(() => EditMenuItem(menuitem.Id))">
                            <i class="oi oi-pencil"></i>
                        </button>
                    </td>*@
                </tr>
            </Virtualize>
        </tbody>
    </table>
}

@code {

    protected override async Task OnInitializedAsync()
    {
        await MenuItemService.GetAdminMenuItems();
    }

    void EditMenuItem(int menuItemId)
    {
        NavigationManager.NavigateTo($"admin/menuitem/{menuItemId}");
    }

    void CreateMenuItem()
    {
        NavigationManager.NavigateTo("admin/menuitem");
    }
}
